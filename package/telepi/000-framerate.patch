--- a/telepi.c.orig	2019-03-18 13:10:43.001195510 +0000
+++ b/telepi.c	2019-03-18 13:11:25.930502438 +0000
@@ -55,9 +55,8 @@
    return 1;
 }
 
-
 static int
-video_encode_test(char *outputfilename)
+video_encode_test(char * bitrate, char * framerate, char *outputfilename)
 {
    int status = 0;
    int framenumber = 0;
@@ -87,11 +86,26 @@
    assert(ret == 0);
 
    encode_init(&video_encode);
-
-   encode_config_format(video_encode, info.width, info.height, 30);
+     // patch starts
+    char * end;
+    int32_t fr = 25;
+    fr = strtol(framerate, &end, 10);
+    if (fr <= 0)
+    {
+        printf("framerate can not be less or equal zero\r\n");
+        fr = 25;
+    }
+   encode_config_format(video_encode, info.width, info.height, fr);
    encode_config_encoding(video_encode, OMX_VIDEO_CodingAVC);
-   encode_config_bitrate(video_encode, 16000000 /* 8388608 */);
 
+    uint32_t br = strtoul(bitrate, &end, 10);
+    if (br == 0)
+    {
+        printf("bitrate can not be null\r\n");
+        br = 16000000UL;
+    }
+   encode_config_bitrate(video_encode, br/*16000000*/ /* 8388608 */);
+// patch ends-------
    //encode_config_low_latency(video_encode, true);
 
    encode_config_activate(video_encode);
@@ -104,7 +118,7 @@
    {
       outf = fopen(outputfilename, "wb");
    }
-   
+
    if (outf == NULL)
    {
       fprintf(stderr, "Failed to open '%s' for writing video\n", outputfilename);
@@ -115,10 +129,10 @@
    do
    {
       buf = ilclient_get_input_buffer(video_encode, 200, 1);
-      
+
       if (buf != NULL)
       {
-      	 /* fill it */
+         /* fill it */
          take_snapshot(buf->pBuffer, &buf->nFilledLen);
          framenumber++;
 
@@ -127,18 +141,18 @@
             fprintf(stderr, "Error emptying buffer!\n");
          }
 
-      	out = ilclient_get_output_buffer(video_encode, 201, 1);
+        out = ilclient_get_output_buffer(video_encode, 201, 1);
 
-      	r = OMX_FillThisBuffer(ILC_GET_HANDLE(video_encode), out);
-      	if (r != OMX_ErrorNone)
+        r = OMX_FillThisBuffer(ILC_GET_HANDLE(video_encode), out);
+        if (r != OMX_ErrorNone)
          {
-      	   fprintf(stderr, "Error filling buffer: %x\n", r);
-      	}
+           fprintf(stderr, "Error filling buffer: %x\n", r);
+        }
 
-      	if (out != NULL)
+        if (out != NULL)
          {
             /*
-      	   if (out->nFlags & OMX_BUFFERFLAG_CODECCONFIG)
+           if (out->nFlags & OMX_BUFFERFLAG_CODECCONFIG)
             {
                int i;
                for (i = 0; i < out->nFilledLen; i++)
@@ -187,11 +201,11 @@
 main(int argc, char **argv)
 {
    fprintf(stderr, "TelePi - Raspberry Pi remote viewer\n\n");
-
-   if (argc < 2) {
+//patch starts------
+   if (argc < 4) {
       fprintf(stderr, "Usage:\n");
-      fprintf(stderr, "Record to file: %s <filename>\n", argv[0]);
-      fprintf(stderr, "Output to stdout: %s <filename>\n", argv[0]);
+      fprintf(stderr, "Record to file: %s bitrate framerate <filename>\n", argv[0]);
+      fprintf(stderr, "Output to stdout: %s bitrate framerate <filename>\n", argv[0]);
 
       fprintf(stderr, "\nStream to a remote computer:\n");
       fprintf(stderr, "%s - | netcat <remote_ip> 5001\n\n", argv[0]);
@@ -200,5 +214,7 @@
 
    bcm_host_init();
 
-   return video_encode_test(argv[1]);
+   return video_encode_test(argv[1], argv[2], argv[3]);
+ //patch ends-----
 }
+
